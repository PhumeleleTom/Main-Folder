{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Main-folder\\\\frontend\\\\src\\\\components\\\\TaskList.tsx\";\nimport React from 'react';\nimport { getTasks } from '../api/TaskService';\nimport { Task } from './Task';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = async props => {\n  const {\n    data\n  } = await getTasks();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Task, {\n      task: data[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","getTasks","Task","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","props","data","children","task","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/Main-folder/frontend/src/components/TaskList.tsx"],"sourcesContent":["import React from 'react'\r\nimport { deleteTask, saveTask, getTask, updateTask, getTasks } from '../api/TaskService';\r\nimport { TaskInterface } from '../interface/TaskInterface';\r\nimport { Task } from './Task';\r\n\r\ninterface Props{\r\n  work: boolean;\r\n  completed: boolean;\r\n}\r\n\r\nconst TaskList = async (props: Props) => {\r\n  const { data } = await getTasks();\r\n    return (<>\r\n      <Task task={data[0]} />\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default TaskList\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAoDC,QAAQ,QAAQ,oBAAoB;AAExF,SAASC,IAAI,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAO9B,MAAMC,QAAQ,GAAG,MAAOC,KAAY,IAAK;EACvC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMR,QAAQ,CAAC,CAAC;EAC/B,oBAAQG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACNN,OAAA,CAACF,IAAI;MAACS,IAAI,EAAEF,IAAI,CAAC,CAAC;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACrB,CAAC;AAEP,CAAC;AAAAC,EAAA,GANGT,QAAQ;AAQd,eAAeA,QAAQ;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}