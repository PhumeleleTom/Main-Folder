{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Main-folder\\\\frontend\\\\src\\\\components\\\\Form.tsx\",\n  _s = $RefreshSig$();\nimport \"../App.css\";\nimport { useState } from \"react\";\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = () => {\n  _s();\n  const today = new Date(Date.now());\n  const [taskName, setTaskName] = useState(\"task\");\n  const [taskCompleted, setTaskCompleted] = useState(false);\n  const [taskStartTime, setTaskStartTime] = useState(today.toLocaleTimeString());\n  const [taskEndTime, setTaskEndTime] = useState(today.toLocaleTimeString());\n  const [taskNotes, setTaskNotes] = useState(\"\");\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Task Name Required\"),\n    startTime: yup.string().datetime().required(\"Start Time is Required.\"),\n    endTime: yup.string().datetime().required(\"End Time is Required.\"),\n    notes: yup.string()\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newTaskForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name of the task\",\n        onChange: event => {\n          setTaskName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        placeholder: \"Start Time\",\n        onChange: event => {\n          setTaskStartTime(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        placeholder: \"End Time\",\n        onChange: event => {\n          setTaskEndTime(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Task Notes\",\n        rows: 10,\n        cols: 10,\n        onChange: event => {\n          setTaskNotes(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancelButton\",\n        children: \" Cancel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addTaskButton\",\n        type: \"submit\",\n        value: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"nCXk2Oh8DYcK4j24SfKN9QtiSCk=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","yup","yupResolver","useForm","jsxDEV","_jsxDEV","Form","_s","today","Date","now","taskName","setTaskName","taskCompleted","setTaskCompleted","taskStartTime","setTaskStartTime","toLocaleTimeString","taskEndTime","setTaskEndTime","taskNotes","setTaskNotes","schema","object","shape","name","string","required","startTime","datetime","endTime","notes","register","handleSubmit","formState","errors","resolver","children","className","type","placeholder","onChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/Main-folder/frontend/src/components/Form.tsx"],"sourcesContent":["import \"../App.css\";\r\nimport { useState } from \"react\";\r\nimport Popup from 'reactjs-popup';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const Form = () => {\r\n    const today: Date = new Date(Date.now());\r\n\r\n    const [taskName, setTaskName] = useState(\"task\");\r\n    const [taskCompleted, setTaskCompleted] = useState(false);\r\n    const [taskStartTime, setTaskStartTime] = useState(today.toLocaleTimeString())\r\n    const [taskEndTime, setTaskEndTime] = useState(today.toLocaleTimeString())\r\n    const [taskNotes, setTaskNotes] = useState(\"\")\r\n\r\n    const schema = yup.object().shape({\r\n        name: yup.string().required(\"Task Name Required\"),\r\n        startTime: yup.string().datetime().required(\"Start Time is Required.\"),\r\n        endTime: yup.string().datetime().required(\"End Time is Required.\"),\r\n        notes: yup.string()\r\n    });\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"newTaskForm\">\r\n                <input type=\"text\" placeholder=\"Name of the task\" onChange={(event) => {\r\n                    setTaskName(event.target.value);\r\n                }}></input>\r\n                <input type=\"time\" placeholder=\"Start Time\" onChange={(event) => {\r\n                    setTaskStartTime(event.target.value);\r\n                }}></input>\r\n                <input type=\"time\" placeholder=\"End Time\" onChange={(event) => {\r\n                    setTaskEndTime(event.target.value);\r\n                }}></input>\r\n                <textarea placeholder=\"Task Notes\" rows={10} cols={10} onChange={(event) => {\r\n                    setTaskNotes(event.target.value);\r\n                }}></textarea>\r\n                <button className=\"cancelButton\"> Cancel </button>\r\n                <input className=\"addTaskButton\" type=\"submit\" value={\"Add Task\"}></input>\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}