{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Main-folder\\\\frontend\\\\src\\\\components\\\\TaskList.tsx\";\nimport React from 'react';\nimport { getTasks } from '../api/TaskService';\nimport { Task } from './Task';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = async props => {\n  var _data$content3;\n  const {\n    data\n  } = await getTasks();\n  if (props.work) {\n    var _data$content;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(data === null || data === void 0 ? void 0 : (_data$content = data.content) === null || _data$content === void 0 ? void 0 : _data$content.length) > 0 && data.map(currentTask => {\n        if (!currentTask.taskCompleted) {\n          return /*#__PURE__*/_jsxDEV(Task, {\n            task: currentTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 20\n          }, this);\n        }\n      }), \";\"]\n    }, void 0, true);\n  }\n  if (props.completed) {\n    var _data$content2;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: (data === null || data === void 0 ? void 0 : (_data$content2 = data.content) === null || _data$content2 === void 0 ? void 0 : _data$content2.length) > 0 && data.map(currentTask => {\n        if (currentTask.taskCompleted) {\n          return /*#__PURE__*/_jsxDEV(Task, {\n            task: currentTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 20\n          }, this);\n        }\n      })\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (data === null || data === void 0 ? void 0 : (_data$content3 = data.content) === null || _data$content3 === void 0 ? void 0 : _data$content3.length) > 0 && data.map(currentTask => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        task: currentTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","getTasks","Task","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","props","_data$content3","data","work","_data$content","children","content","length","map","currentTask","taskCompleted","task","fileName","_jsxFileName","lineNumber","columnNumber","completed","_data$content2","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/Main-folder/frontend/src/components/TaskList.tsx"],"sourcesContent":["import React from 'react'\r\nimport { deleteTask, saveTask, getTask, updateTask, getTasks } from '../api/TaskService';\r\nimport { TaskInterface } from '../interface/TaskInterface';\r\nimport { Task } from './Task';\r\n\r\ninterface Props{\r\n  work: boolean;\r\n  completed: boolean;\r\n}\r\n\r\nconst TaskList = async (props: Props) => {\r\n  const { data } = await getTasks();\r\n\r\n  if(props.work){\r\n    return (\r\n      <>\r\n        {data?.content?.length > 0 && data.map((currentTask: TaskInterface) => {\r\n          if(!currentTask.taskCompleted){\r\n            return <Task task={currentTask} />\r\n          }\r\n        })};\r\n      </>\r\n    )\r\n  }\r\n  if(props.completed){\r\n    return (\r\n      <>\r\n        {data?.content?.length > 0 && data.map((currentTask: TaskInterface) => {\r\n          if(currentTask.taskCompleted){\r\n            return <Task task={currentTask} />\r\n          }\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n    return (\r\n    <>\r\n      {data?.content?.length > 0 && data.map((currentTask: TaskInterface) => {\r\n        return <Task task={currentTask} />\r\n      })}\r\n    </>\r\n  )}\r\n\r\nexport default TaskList\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAoDC,QAAQ,QAAQ,oBAAoB;AAExF,SAASC,IAAI,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAO9B,MAAMC,QAAQ,GAAG,MAAOC,KAAY,IAAK;EAAA,IAAAC,cAAA;EACvC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMT,QAAQ,CAAC,CAAC;EAEjC,IAAGO,KAAK,CAACG,IAAI,EAAC;IAAA,IAAAC,aAAA;IACZ,oBACER,OAAA,CAAAE,SAAA;MAAAO,QAAA,GACG,CAAAH,IAAI,aAAJA,IAAI,wBAAAE,aAAA,GAAJF,IAAI,CAAEI,OAAO,cAAAF,aAAA,uBAAbA,aAAA,CAAeG,MAAM,IAAG,CAAC,IAAIL,IAAI,CAACM,GAAG,CAAEC,WAA0B,IAAK;QACrE,IAAG,CAACA,WAAW,CAACC,aAAa,EAAC;UAC5B,oBAAOd,OAAA,CAACF,IAAI;YAACiB,IAAI,EAAEF;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QACpC;MACF,CAAC,CAAC,EAAC,GACL;IAAA,eAAE,CAAC;EAEP;EACA,IAAGf,KAAK,CAACgB,SAAS,EAAC;IAAA,IAAAC,cAAA;IACjB,oBACErB,OAAA,CAAAE,SAAA;MAAAO,QAAA,EACG,CAAAH,IAAI,aAAJA,IAAI,wBAAAe,cAAA,GAAJf,IAAI,CAAEI,OAAO,cAAAW,cAAA,uBAAbA,cAAA,CAAeV,MAAM,IAAG,CAAC,IAAIL,IAAI,CAACM,GAAG,CAAEC,WAA0B,IAAK;QACrE,IAAGA,WAAW,CAACC,aAAa,EAAC;UAC3B,oBAAOd,OAAA,CAACF,IAAI;YAACiB,IAAI,EAAEF;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QACpC;MACF,CAAC;IAAC,gBACF,CAAC;EAEP;EACE,oBACAnB,OAAA,CAAAE,SAAA;IAAAO,QAAA,EACG,CAAAH,IAAI,aAAJA,IAAI,wBAAAD,cAAA,GAAJC,IAAI,CAAEI,OAAO,cAAAL,cAAA,uBAAbA,cAAA,CAAeM,MAAM,IAAG,CAAC,IAAIL,IAAI,CAACM,GAAG,CAAEC,WAA0B,IAAK;MACrE,oBAAOb,OAAA,CAACF,IAAI;QAACiB,IAAI,EAAEF;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACpC,CAAC;EAAC,gBACF,CAAC;AACJ,CAAC;AAAAG,EAAA,GA/BEnB,QAAQ;AAiCd,eAAeA,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}