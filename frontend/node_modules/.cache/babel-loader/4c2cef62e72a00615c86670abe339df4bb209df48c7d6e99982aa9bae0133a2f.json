{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Main-folder\\\\frontend\\\\src\\\\components\\\\Form.tsx\",\n  _s = $RefreshSig$();\nimport \"../App.css\";\nimport { useEffect, useState } from \"react\";\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from \"react-hook-form\";\nimport { saveTask } from \"../api/TaskService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = ({\n  toggleModal,\n  task\n}) => {\n  _s();\n  var _errors$name, _errors$startTime, _errors$endTime;\n  const [taskName, setTaskName] = useState(\"\");\n  const [taskStartTime, setTaskStartTime] = useState(\"\");\n  const [taskEndTime, setTaskEndTime] = useState(\"\");\n  const [taskNotes, setTaskNotes] = useState(\"\");\n  useEffect(() => {\n    if (task.id !== \"\") {\n      setTaskName(task.name);\n      setTaskStartTime(task.startTime);\n      setTaskEndTime(task.endTime);\n      setTaskNotes(taskNotes);\n    }\n  }, []);\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Task Name Required\"),\n    startTime: yup.string().required(\"Start Time is Required.\"),\n    endTime: yup.string().required(\"End Time is Required.\"),\n    notes: yup.string()\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const createTask = async event => {\n    const newTask = {\n      id: '',\n      name: event.name,\n      startTime: event.startTime,\n      endTime: event.endTime,\n      notes: event.notes,\n      completed: false\n    };\n    try {\n      if (task.id !== \"\") {\n        console.log(task);\n        saveTask({\n          ...task,\n          name: event.name,\n          startTime: event.startTime,\n          endTime: event.endTime,\n          notes: event.notes\n        });\n      } else {\n        const {\n          data\n        } = await saveTask(newTask);\n        newTask.id = data.id;\n      }\n      setTaskName(\"\");\n      setTaskStartTime(\"\");\n      setTaskEndTime(\"\");\n      setTaskNotes(\"\");\n      toggleModal(false);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newTaskForm\",\n      onSubmit: handleSubmit(createTask),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name of the task\",\n        ...register(\"name\"),\n        onChange: event => {\n          setTaskName(event.target.value);\n        },\n        value: taskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMessage\",\n        children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        placeholder: \"Start Time\",\n        ...register(\"startTime\"),\n        onChange: event => {\n          setTaskStartTime(event.target.value);\n        },\n        value: taskStartTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMessage\",\n        children: (_errors$startTime = errors.startTime) === null || _errors$startTime === void 0 ? void 0 : _errors$startTime.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        placeholder: \"End Time\",\n        ...register(\"endTime\"),\n        onChange: event => {\n          setTaskEndTime(event.target.value);\n        },\n        value: taskEndTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMessage\",\n        children: (_errors$endTime = errors.endTime) === null || _errors$endTime === void 0 ? void 0 : _errors$endTime.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Task Notes\",\n        ...register(\"notes\"),\n        rows: 10,\n        cols: 10,\n        onChange: event => {\n          setTaskNotes(event.target.value);\n        },\n        value: taskNotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancelButton\",\n        onClick: () => {\n          toggleModal(false);\n        },\n        children: \" Cancel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addTaskButton\",\n        type: \"submit\",\n        value: \"Save Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"d/UM05iRUOlbQGVWi2jUPk5LljQ=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useEffect","useState","yup","yupResolver","useForm","saveTask","jsxDEV","_jsxDEV","Form","toggleModal","task","_s","_errors$name","_errors$startTime","_errors$endTime","taskName","setTaskName","taskStartTime","setTaskStartTime","taskEndTime","setTaskEndTime","taskNotes","setTaskNotes","id","name","startTime","endTime","schema","object","shape","string","required","notes","register","handleSubmit","formState","errors","resolver","createTask","event","newTask","completed","console","log","data","window","location","reload","error","children","className","onSubmit","type","placeholder","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","message","rows","cols","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/Main-folder/frontend/src/components/Form.tsx"],"sourcesContent":["import \"../App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Popup from 'reactjs-popup';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { set, useForm } from \"react-hook-form\";\r\nimport { TaskInterface } from \"../interface/TaskInterface\";\r\nimport { saveTask } from \"../api/TaskService\";\r\n\r\nexport const Form = ({ toggleModal, task } : { toggleModal : Function, task: TaskInterface}) => {\r\n    const [taskName, setTaskName] = useState(\"\");\r\n    const [taskStartTime, setTaskStartTime] = useState(\"\")\r\n    const [taskEndTime, setTaskEndTime] = useState(\"\")\r\n    const [taskNotes, setTaskNotes] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if(task.id !== \"\"){\r\n            setTaskName(task.name);\r\n            setTaskStartTime(task.startTime);\r\n            setTaskEndTime(task.endTime);\r\n            setTaskNotes(taskNotes);\r\n        }\r\n    }, []);\r\n\r\n    \r\n\r\n    const schema = yup.object().shape({\r\n        name: yup.string().required(\"Task Name Required\"),\r\n        startTime: yup.string().required(\"Start Time is Required.\"),\r\n        endTime: yup.string().required(\"End Time is Required.\"),\r\n        notes: yup.string()\r\n    });\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const createTask = async (event: any) => {\r\n        const newTask: TaskInterface = {\r\n            id: '',\r\n            name: event.name,\r\n            startTime: event.startTime,\r\n            endTime: event.endTime,\r\n            notes: event.notes,\r\n            completed: false,\r\n        }\r\n        try{\r\n            if(task.id !== \"\")\r\n            {\r\n                console.log(task);\r\n                saveTask({\r\n                    ...task,\r\n                    name: event.name,\r\n                    startTime: event.startTime,\r\n                    endTime: event.endTime,\r\n                    notes: event.notes\r\n                })\r\n            }else{\r\n                const { data } = await saveTask(newTask);\r\n                newTask.id = data.id;\r\n            }\r\n            setTaskName(\"\");\r\n            setTaskStartTime(\"\");\r\n            setTaskEndTime(\"\");\r\n            setTaskNotes(\"\");\r\n\r\n            toggleModal(false);\r\n            window.location.reload();\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"newTaskForm\" onSubmit={handleSubmit(createTask)}>\r\n                <input type=\"text\" placeholder=\"Name of the task\" {...register(\"name\")} onChange={(event) => {\r\n                    setTaskName(event.target.value);\r\n                }} value={taskName}></input>\r\n                <p className=\"errorMessage\">{errors.name?.message}</p>\r\n                <input type=\"time\" placeholder=\"Start Time\" {...register(\"startTime\")} onChange={(event) => {\r\n                    setTaskStartTime(event.target.value);\r\n                }} value={taskStartTime}></input>\r\n                <p className=\"errorMessage\">{errors.startTime?.message}</p>\r\n                <input type=\"time\" placeholder=\"End Time\" {...register(\"endTime\")} onChange={(event) => {\r\n                    setTaskEndTime(event.target.value);\r\n                }} value={taskEndTime}></input>\r\n                <p className=\"errorMessage\">{errors.endTime?.message}</p>\r\n                <textarea placeholder=\"Task Notes\" {...register(\"notes\")} rows={10} cols={10} onChange={(event) => {\r\n                    setTaskNotes(event.target.value);\r\n                }} value={taskNotes}></textarea>\r\n                <button className=\"cancelButton\" onClick={() => {toggleModal(false);}}> Cancel </button>\r\n                <input className=\"addTaskButton\" type=\"submit\" value={\"Save Task\"}></input>\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}