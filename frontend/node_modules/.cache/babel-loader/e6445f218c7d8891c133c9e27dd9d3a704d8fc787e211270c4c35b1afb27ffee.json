{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Main-folder\\\\frontend\\\\src\\\\components\\\\Form.tsx\",\n  _s = $RefreshSig$();\nimport \"../App.css\";\nimport { useState } from \"react\";\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from \"react-hook-form\";\nimport { saveTask } from \"../api/TaskService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = ({\n  toggleModal,\n  task\n}) => {\n  _s();\n  var _errors$name, _errors$startTime, _errors$endTime;\n  const today = new Date(Date.now());\n  const [taskName, setTaskName] = useState(\"\");\n  const [taskStartTime, setTaskStartTime] = useState(\"\");\n  const [taskEndTime, setTaskEndTime] = useState(\"\");\n  const [taskNotes, setTaskNotes] = useState(\"\");\n  if (task.id !== \"\") {\n    setTaskName(task.name);\n    setTaskStartTime(task.startTime);\n    setTaskEndTime(task.endTime);\n    setTaskNotes(taskNotes);\n  }\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Task Name Required\"),\n    startTime: yup.string().datetime().required(\"Start Time is Required.\"),\n    endTime: yup.string().required(\"End Time is Required.\"),\n    notes: yup.string()\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const createTask = async event => {\n    const newTask = {\n      id: '',\n      name: event.name,\n      startTime: event.startTime,\n      endTime: event.endTime,\n      notes: event.notes,\n      taskCompleted: false\n    };\n    try {\n      if (task.id !== \"\") {\n        saveTask({\n          ...task,\n          name: event.name,\n          startTime: event.startTime,\n          endTime: event.endTime,\n          notes: event.notes\n        });\n      } else {\n        const {\n          data\n        } = await saveTask(newTask);\n        newTask.id = data.id;\n      }\n      setTaskName(\"\");\n      setTaskStartTime(\"\");\n      setTaskEndTime(\"\");\n      setTaskNotes(\"\");\n      toggleModal(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newTaskForm\",\n      onSubmit: handleSubmit(createTask),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name of the task\",\n        ...register(\"name\"),\n        onChange: event => {\n          setTaskName(event.target.value);\n        },\n        value: taskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMessage\",\n        children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        placeholder: \"Start Time\",\n        ...register(\"startTime\"),\n        onChange: event => {\n          setTaskStartTime(event.target.value);\n        },\n        value: taskStartTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMessage\",\n        children: (_errors$startTime = errors.startTime) === null || _errors$startTime === void 0 ? void 0 : _errors$startTime.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        placeholder: \"End Time\",\n        ...register(\"endTime\"),\n        onChange: event => {\n          setTaskEndTime(event.target.value);\n        },\n        value: taskEndTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMessage\",\n        children: (_errors$endTime = errors.endTime) === null || _errors$endTime === void 0 ? void 0 : _errors$endTime.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Task Notes\",\n        ...register(\"notes\"),\n        rows: 10,\n        cols: 10,\n        onChange: event => {\n          setTaskNotes(event.target.value);\n        },\n        value: taskNotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancelButton\",\n        onClick: () => toggleModal(false),\n        children: \" Cancel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addTaskButton\",\n        type: \"submit\",\n        value: \"Save Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"/dcLXVvDFZanIiRtoZynBvc1voE=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","yup","yupResolver","useForm","saveTask","jsxDEV","_jsxDEV","Form","toggleModal","task","_s","_errors$name","_errors$startTime","_errors$endTime","today","Date","now","taskName","setTaskName","taskStartTime","setTaskStartTime","taskEndTime","setTaskEndTime","taskNotes","setTaskNotes","id","name","startTime","endTime","schema","object","shape","string","required","datetime","notes","register","handleSubmit","formState","errors","resolver","createTask","event","newTask","taskCompleted","data","error","console","log","children","className","onSubmit","type","placeholder","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","message","rows","cols","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/Main-folder/frontend/src/components/Form.tsx"],"sourcesContent":["import \"../App.css\";\r\nimport { useState } from \"react\";\r\nimport Popup from 'reactjs-popup';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { set, useForm } from \"react-hook-form\";\r\nimport { TaskInterface } from \"../interface/TaskInterface\";\r\nimport { saveTask } from \"../api/TaskService\";\r\n\r\nexport const Form = ({ toggleModal, task } : { toggleModal : Function, task: TaskInterface}) => {\r\n    const today: Date = new Date(Date.now());\r\n\r\n    const [taskName, setTaskName] = useState(\"\");\r\n    const [taskStartTime, setTaskStartTime] = useState(\"\")\r\n    const [taskEndTime, setTaskEndTime] = useState(\"\")\r\n    const [taskNotes, setTaskNotes] = useState(\"\")\r\n\r\n    if(task.id !== \"\"){\r\n        setTaskName(task.name);\r\n        setTaskStartTime(task.startTime);\r\n        setTaskEndTime(task.endTime);\r\n        setTaskNotes(taskNotes);\r\n    }\r\n\r\n    const schema = yup.object().shape({\r\n        name: yup.string().required(\"Task Name Required\"),\r\n        startTime: yup.string().datetime().required(\"Start Time is Required.\"),\r\n        endTime: yup.string().required(\"End Time is Required.\"),\r\n        notes: yup.string()\r\n    });\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const createTask = async (event: any) => {\r\n        const newTask: TaskInterface = {\r\n            id: '',\r\n            name: event.name,\r\n            startTime: event.startTime,\r\n            endTime: event.endTime,\r\n            notes: event.notes,\r\n            taskCompleted: false,\r\n        }\r\n        try{\r\n            if(task.id !== \"\")\r\n            {\r\n                saveTask({\r\n                    ...task,\r\n                    name: event.name,\r\n                    startTime: event.startTime,\r\n                    endTime: event.endTime,\r\n                    notes: event.notes\r\n                })\r\n            }else{\r\n                const { data } = await saveTask(newTask);\r\n                newTask.id = data.id;\r\n            }\r\n            setTaskName(\"\");\r\n            setTaskStartTime(\"\");\r\n            setTaskEndTime(\"\");\r\n            setTaskNotes(\"\");\r\n            toggleModal(false);\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"newTaskForm\" onSubmit={handleSubmit(createTask)}>\r\n                <input type=\"text\" placeholder=\"Name of the task\" {...register(\"name\")} onChange={(event) => {\r\n                    setTaskName(event.target.value);\r\n                }} value={taskName}></input>\r\n                <p className=\"errorMessage\">{errors.name?.message}</p>\r\n                <input type=\"time\" placeholder=\"Start Time\" {...register(\"startTime\")} onChange={(event) => {\r\n                    setTaskStartTime(event.target.value);\r\n                }} value={taskStartTime}></input>\r\n                <p className=\"errorMessage\">{errors.startTime?.message}</p>\r\n                <input type=\"time\" placeholder=\"End Time\" {...register(\"endTime\")} onChange={(event) => {\r\n                    setTaskEndTime(event.target.value);\r\n                }} value={taskEndTime}></input>\r\n                <p className=\"errorMessage\">{errors.endTime?.message}</p>\r\n                <textarea placeholder=\"Task Notes\" {...register(\"notes\")} rows={10} cols={10} onChange={(event) => {\r\n                    setTaskNotes(event.target.value);\r\n                }} value={taskNotes}></textarea>\r\n                <button className=\"cancelButton\" onClick={() => toggleModal(false)}> Cancel </button>\r\n                <input className=\"addTaskButton\" type=\"submit\" value={\"Save Task\"}></input>\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}