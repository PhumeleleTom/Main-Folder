{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Main-folder\\\\frontend\\\\src\\\\components\\\\Form.tsx\",\n  _s = $RefreshSig$();\nimport \"../App.css\";\nimport { useState } from \"react\";\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from \"react-hook-form\";\nimport { saveTask } from \"../api/TaskService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = ({\n  toggleModal,\n  task\n}) => {\n  _s();\n  var _errors$name, _errors$startTime, _errors$endTime;\n  const today = new Date(Date.now());\n  const [taskName, setTaskName] = useState(\"\");\n  const [taskStartTime, setTaskStartTime] = useState(\"\");\n  const [taskEndTime, setTaskEndTime] = useState(\"\");\n  const [taskNotes, setTaskNotes] = useState(\"\");\n  const initialTask = {\n    id: \"\",\n    name: \"\",\n    startTime: \"\",\n    endTime: \"\",\n    completed: false,\n    notes: \"\"\n  };\n  if (task.id !== \"\") {\n    setTaskName(task.name);\n    setTaskStartTime(task.startTime);\n    setTaskEndTime(task.endTime);\n    setTaskNotes(taskNotes);\n  }\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Task Name Required\"),\n    startTime: yup.string().required(\"Start Time is Required.\"),\n    endTime: yup.string().required(\"End Time is Required.\"),\n    notes: yup.string()\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const createTask = async event => {\n    const newTask = {\n      id: '',\n      name: event.name,\n      startTime: event.startTime,\n      endTime: event.endTime,\n      notes: event.notes,\n      completed: false\n    };\n    try {\n      if (task.id !== \"\") {\n        console.log(task);\n        saveTask({\n          ...task,\n          name: event.name,\n          startTime: event.startTime,\n          endTime: event.endTime,\n          notes: event.notes\n        });\n      } else {\n        const {\n          data\n        } = await saveTask(newTask);\n        newTask.id = data.id;\n      }\n      setTaskName(\"\");\n      setTaskStartTime(\"\");\n      setTaskEndTime(\"\");\n      setTaskNotes(\"\");\n      toggleModal(false);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newTaskForm\",\n      onSubmit: handleSubmit(createTask),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name of the task\",\n        ...register(\"name\"),\n        onChange: event => {\n          setTaskName(event.target.value);\n        },\n        value: taskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMessage\",\n        children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        placeholder: \"Start Time\",\n        ...register(\"startTime\"),\n        onChange: event => {\n          setTaskStartTime(event.target.value);\n        },\n        value: taskStartTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMessage\",\n        children: (_errors$startTime = errors.startTime) === null || _errors$startTime === void 0 ? void 0 : _errors$startTime.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        placeholder: \"End Time\",\n        ...register(\"endTime\"),\n        onChange: event => {\n          setTaskEndTime(event.target.value);\n        },\n        value: taskEndTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMessage\",\n        children: (_errors$endTime = errors.endTime) === null || _errors$endTime === void 0 ? void 0 : _errors$endTime.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Task Notes\",\n        ...register(\"notes\"),\n        rows: 10,\n        cols: 10,\n        onChange: event => {\n          setTaskNotes(event.target.value);\n        },\n        value: taskNotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancelButton\",\n        onClick: () => {\n          toggleModal(false);\n        },\n        children: \" Cancel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addTaskButton\",\n        type: \"submit\",\n        value: \"Save Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"/dcLXVvDFZanIiRtoZynBvc1voE=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","yup","yupResolver","useForm","saveTask","jsxDEV","_jsxDEV","Form","toggleModal","task","_s","_errors$name","_errors$startTime","_errors$endTime","today","Date","now","taskName","setTaskName","taskStartTime","setTaskStartTime","taskEndTime","setTaskEndTime","taskNotes","setTaskNotes","initialTask","id","name","startTime","endTime","completed","notes","schema","object","shape","string","required","register","handleSubmit","formState","errors","resolver","createTask","event","newTask","console","log","data","window","location","reload","error","children","className","onSubmit","type","placeholder","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","message","rows","cols","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/Main-folder/frontend/src/components/Form.tsx"],"sourcesContent":["import \"../App.css\";\r\nimport { useState } from \"react\";\r\nimport Popup from 'reactjs-popup';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { set, useForm } from \"react-hook-form\";\r\nimport { TaskInterface } from \"../interface/TaskInterface\";\r\nimport { saveTask } from \"../api/TaskService\";\r\n\r\nexport const Form = ({ toggleModal, task } : { toggleModal : Function, task: TaskInterface}) => {\r\n    const today: Date = new Date(Date.now());\r\n\r\n    const [taskName, setTaskName] = useState(\"\");\r\n    const [taskStartTime, setTaskStartTime] = useState(\"\")\r\n    const [taskEndTime, setTaskEndTime] = useState(\"\")\r\n    const [taskNotes, setTaskNotes] = useState(\"\")\r\n    const initialTask: TaskInterface = {\r\n        id: \"\",\r\n        name: \"\",\r\n        startTime: \"\",\r\n        endTime: \"\",\r\n        completed: false,\r\n        notes: \"\"\r\n      };\r\n\r\n    if(task.id !== \"\"){\r\n        setTaskName(task.name);\r\n        setTaskStartTime(task.startTime);\r\n        setTaskEndTime(task.endTime);\r\n        setTaskNotes(taskNotes);\r\n    }\r\n\r\n    const schema = yup.object().shape({\r\n        name: yup.string().required(\"Task Name Required\"),\r\n        startTime: yup.string().required(\"Start Time is Required.\"),\r\n        endTime: yup.string().required(\"End Time is Required.\"),\r\n        notes: yup.string()\r\n    });\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const createTask = async (event: any) => {\r\n        const newTask: TaskInterface = {\r\n            id: '',\r\n            name: event.name,\r\n            startTime: event.startTime,\r\n            endTime: event.endTime,\r\n            notes: event.notes,\r\n            completed: false,\r\n        }\r\n        try{\r\n            if(task.id !== \"\")\r\n            {\r\n                console.log(task);\r\n                saveTask({\r\n                    ...task,\r\n                    name: event.name,\r\n                    startTime: event.startTime,\r\n                    endTime: event.endTime,\r\n                    notes: event.notes\r\n                })\r\n            }else{\r\n                const { data } = await saveTask(newTask);\r\n                newTask.id = data.id;\r\n            }\r\n            setTaskName(\"\");\r\n            setTaskStartTime(\"\");\r\n            setTaskEndTime(\"\");\r\n            setTaskNotes(\"\");\r\n\r\n            toggleModal(false);\r\n            window.location.reload();\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"newTaskForm\" onSubmit={handleSubmit(createTask)}>\r\n                <input type=\"text\" placeholder=\"Name of the task\" {...register(\"name\")} onChange={(event) => {\r\n                    setTaskName(event.target.value);\r\n                }} value={taskName}></input>\r\n                <p className=\"errorMessage\">{errors.name?.message}</p>\r\n                <input type=\"time\" placeholder=\"Start Time\" {...register(\"startTime\")} onChange={(event) => {\r\n                    setTaskStartTime(event.target.value);\r\n                }} value={taskStartTime}></input>\r\n                <p className=\"errorMessage\">{errors.startTime?.message}</p>\r\n                <input type=\"time\" placeholder=\"End Time\" {...register(\"endTime\")} onChange={(event) => {\r\n                    setTaskEndTime(event.target.value);\r\n                }} value={taskEndTime}></input>\r\n                <p className=\"errorMessage\">{errors.endTime?.message}</p>\r\n                <textarea placeholder=\"Task Notes\" {...register(\"notes\")} rows={10} cols={10} onChange={(event) => {\r\n                    setTaskNotes(event.target.value);\r\n                }} value={taskNotes}></textarea>\r\n                <button className=\"cancelButton\" onClick={() => {toggleModal(false);}}> Cancel </button>\r\n                <input className=\"addTaskButton\" type=\"submit\" value={\"Save Task\"}></input>\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}